# Generated by Django 5.2.3 on 2025-06-24 16:41

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ("catalog", "0008_impactdetail"),
    ]

    operations = [
        migrations.CreateModel(
            name="Measure",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "measure_name_cs",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="Measure name (Czech)"
                    ),
                ),
                (
                    "measure_name_en",
                    models.CharField(
                        max_length=100,
                        unique=True,
                        verbose_name="Measure name (English)",
                    ),
                ),
                (
                    "code",
                    models.CharField(max_length=10, unique=True, verbose_name="Code"),
                ),
                (
                    "abstract_cs",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Abstract (Czech)",
                    ),
                ),
                (
                    "abstract_en",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Abstract (English)",
                    ),
                ),
                (
                    "description_cs",
                    models.TextField(verbose_name="Description (Czech)"),
                ),
                (
                    "description_en",
                    models.TextField(verbose_name="Description (English)"),
                ),
                (
                    "env_desc",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Environmental compartment (overlap) - note",
                    ),
                ),
                (
                    "conditions_for_implementation_cs",
                    models.TextField(
                        null=True, verbose_name="Conditions of implementation (Czech)"
                    ),
                ),
                (
                    "conditions_for_implementation_en",
                    models.TextField(
                        null=True, verbose_name="Conditions of implementation (English)"
                    ),
                ),
                (
                    "other_conflict",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Other conflicts",
                    ),
                ),
                (
                    "impact_desc_cs",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Impact categories of climate change - note (Czech)",
                    ),
                ),
                (
                    "impact_desc_en",
                    models.TextField(
                        blank=True,
                        null=True,
                        verbose_name="Impact categories of climate change - note (English)",
                    ),
                ),
                (
                    "price_czk",
                    models.PositiveIntegerField(default=0, verbose_name="Price (CZK)"),
                ),
                (
                    "price_eu",
                    models.PositiveIntegerField(default=0, verbose_name="Price (Euro)"),
                ),
                (
                    "comment_cs",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Comment (cs)",
                    ),
                ),
                (
                    "comment_en",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="Comment (en)",
                    ),
                ),
                (
                    "advantages",
                    models.ManyToManyField(
                        to="catalog.advantage", verbose_name="Advantages"
                    ),
                ),
                (
                    "conflict",
                    models.ManyToManyField(
                        blank=True,
                        limit_choices_to={"choice_name_id": 7},
                        related_name="conflicts",
                        to="catalog.option",
                        verbose_name="Conflicts",
                    ),
                ),
                (
                    "difficulty_of_implementation",
                    models.ForeignKey(
                        limit_choices_to={"choice_name_id": 4},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="difficulty_of_implementations",
                        to="catalog.option",
                        verbose_name="Implementation complexity",
                    ),
                ),
                (
                    "disadvantages",
                    models.ManyToManyField(
                        to="catalog.disadvantage", verbose_name="Disadvantages"
                    ),
                ),
                (
                    "env",
                    models.ForeignKey(
                        limit_choices_to={"choice_name_id": 1},
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="envs",
                        to="catalog.option",
                        verbose_name="Environmental compartment",
                    ),
                ),
                (
                    "env_secondary",
                    models.ManyToManyField(
                        blank=True,
                        limit_choices_to={"choice_name_id": 1},
                        related_name="envs_sec",
                        to="catalog.option",
                        verbose_name="Environmental compartment (overlap)",
                    ),
                ),
                (
                    "group",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="catalog.group",
                        verbose_name="Group",
                    ),
                ),
                (
                    "impact_details",
                    models.ForeignKey(
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="impacts",
                        to="catalog.impactdetail",
                        verbose_name="Impact categories of climate change",
                    ),
                ),
                (
                    "interconnection",
                    models.ManyToManyField(
                        blank=True, to="catalog.measure", verbose_name="Interconnection"
                    ),
                ),
                (
                    "other_impacts_details",
                    models.ManyToManyField(
                        blank=True,
                        related_name="other_impacts",
                        to="catalog.impactdetail",
                        verbose_name="Secondary impact categories of climate change",
                    ),
                ),
                (
                    "potential",
                    models.ForeignKey(
                        limit_choices_to={"choice_name_id": 2},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="potentials",
                        to="catalog.option",
                        verbose_name="Application potential",
                    ),
                ),
                (
                    "quantification",
                    models.ForeignKey(
                        limit_choices_to={"choice_name_id": 5},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rel_quantification",
                        to="catalog.option",
                        verbose_name="Impact quantification",
                    ),
                ),
                (
                    "sdg",
                    models.ManyToManyField(
                        blank=True,
                        limit_choices_to={"choice_name_id": 10},
                        related_name="rel_sdg",
                        to="catalog.option",
                        verbose_name="Sustainable Development Goals (SDG)",
                    ),
                ),
                (
                    "size",
                    models.ForeignKey(
                        limit_choices_to={"choice_name_id": 3},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="sizes",
                        to="catalog.option",
                        verbose_name="Scale / extent",
                    ),
                ),
                (
                    "time_horizon",
                    models.ForeignKey(
                        limit_choices_to={"choice_name_id": 6},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="time_horizons",
                        to="catalog.option",
                        verbose_name="Impact time horizon",
                    ),
                ),
                (
                    "unit",
                    models.ForeignKey(
                        limit_choices_to={"choice_name_id": 11},
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="units",
                        to="catalog.option",
                        verbose_name="Unit",
                    ),
                ),
            ],
        ),
    ]
